{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Store/client/src/components/utils/FileUpload.js\";\nimport React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { Icon } from \"antd\";\nimport Axios from \"axios\";\n\nfunction FileUpload(props) {\n  const [Images, setImages] = useState([]);\n\n  const onDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    formData.append(\"file\", files[0]); //save the Image we chose inside the Node Server\n\n    Axios.post(\"/api/product/uploadImage\", formData, config).then(response => {\n      if (response.data.success) {\n        setImages([...Images, response.data.image]);\n        props.refreshFunction([...Images, response.data.image]);\n      } else {\n        alert(response.data.err);\n        alert(\"Failed to save the Image in Server\");\n      }\n    });\n  };\n\n  const onDelete = image => {\n    const currentIndex = Images.indexOf(image);\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: onDrop,\n    multiple: false,\n    maxSize: 800000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: {\n      width: \"300px\",\n      height: \"240px\",\n      border: \"1px solid lightgray\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), console.log(\"getRootProps\", { ...getRootProps()\n  }), console.log(\"getInputProps\", { ...getInputProps()\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    type: \"plus\",\n    style: {\n      fontSize: \"3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      width: \"350px\",\n      height: \"240px\",\n      overflowX: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, Images.map((image, index) => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => onDelete(image),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      minWidth: \"300px\",\n      width: \"300px\",\n      height: \"240px\"\n    },\n    src: `http://localhost:5000/${image}`,\n    alt: `productImg-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Store/client/src/components/utils/FileUpload.js"],"names":["React","useState","Dropzone","Icon","Axios","FileUpload","props","Images","setImages","onDrop","files","formData","FormData","config","header","append","post","then","response","data","success","image","refreshFunction","alert","err","onDelete","currentIndex","indexOf","newImages","splice","display","justifyContent","getRootProps","getInputProps","width","height","border","alignItems","console","log","fontSize","overflowX","map","index","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { Icon } from \"antd\";\nimport Axios from \"axios\";\nfunction FileUpload(props) {\n  const [Images, setImages] = useState([]);\n\n  const onDrop = (files) => {\n    let formData = new FormData();\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    formData.append(\"file\", files[0]);\n    //save the Image we chose inside the Node Server\n    Axios.post(\"/api/product/uploadImage\", formData, config).then(\n      (response) => {\n        if (response.data.success) {\n          setImages([...Images, response.data.image]);\n          props.refreshFunction([...Images, response.data.image]);\n        } else {\n          alert(response.data.err);\n          alert(\"Failed to save the Image in Server\");\n        }\n      }\n    );\n  };\n\n  const onDelete = (image) => {\n    const currentIndex = Images.indexOf(image);\n\n    let newImages = [...Images];\n    newImages.splice(currentIndex, 1);\n\n    setImages(newImages);\n    props.refreshFunction(newImages);\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n      <Dropzone onDrop={onDrop} multiple={false} maxSize={800000000}>\n        {({ getRootProps, getInputProps }) => (\n          <div\n            style={{\n              width: \"300px\",\n              height: \"240px\",\n              border: \"1px solid lightgray\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n            {...getRootProps()}\n          >\n            {console.log(\"getRootProps\", { ...getRootProps() })}\n            {console.log(\"getInputProps\", { ...getInputProps() })}\n            <input {...getInputProps()} />\n            <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\n          </div>\n        )}\n      </Dropzone>\n\n      <div\n        style={{\n          display: \"flex\",\n          width: \"350px\",\n          height: \"240px\",\n          overflowX: \"scroll\",\n        }}\n      >\n        {Images.map((image, index) => (\n          <div onClick={() => onDelete(image)}>\n            <img\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\n              src={`http://localhost:5000/${image}`}\n              alt={`productImg-${index}`}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}