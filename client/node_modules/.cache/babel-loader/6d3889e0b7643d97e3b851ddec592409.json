{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Store/client/src/components/views/UploadProductPage/sections/CheckBox.js\";\nimport React, { useState } from \"react\";\nimport { Checkbox, Collapse } from \"antd\";\nconst {\n  Panel\n} = Collapse;\n\nfunction CheckBox(props) {\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = value => {\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked);\n  };\n\n  const renderCheckboxLists = () => props.list && props.list.map((value, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: () => handleToggle(value.value),\n    style: {\n      margin: \"0.5rem\"\n    },\n    type: \"checkbox\",\n    checked: Checked.indexOf(value.value) === -1 ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, value.value)));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: [\"1\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Sizes\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, renderCheckboxLists())));\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Store/client/src/components/views/UploadProductPage/sections/CheckBox.js"],"names":["React","useState","Checkbox","Collapse","Panel","CheckBox","props","Checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleFilters","renderCheckboxLists","list","map","index","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,MAAnC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,QAAlB;;AAEA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AACAP,IAAAA,KAAK,CAACU,aAAN,CAAoBH,UAApB;AACD,GAZD;;AAcA,QAAMI,mBAAmB,GAAG,MAC1BX,KAAK,CAACY,IAAN,IACAZ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,CAACT,KAAD,EAAQU,KAAR,kBACb,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE,MAAMX,YAAY,CAACC,KAAK,CAACA,KAAP,CAD9B;AAEE,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,OAAO,EAAEd,OAAO,CAACK,OAAR,CAAgBF,KAAK,CAACA,KAAtB,MAAiC,CAAC,CAAlC,GAAsC,KAAtC,GAA8C,IAJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGA,KAAK,CAACA,KANT,CADF,CADF,CAFF;;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,CAAC,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,OAAd;AAAsB,IAAA,GAAG,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,mBAAmB,EADtB,CADF,CADF,CADF;AASD;;AAED,eAAeZ,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Checkbox, Collapse } from \"antd\";\n\nconst { Panel } = Collapse;\n\nfunction CheckBox(props) {\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = (value) => {\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked);\n  };\n\n  const renderCheckboxLists = () =>\n    props.list &&\n    props.list.map((value, index) => (\n      <React.Fragment key={index}>\n        <Checkbox\n          onChange={() => handleToggle(value.value)}\n          style={{ margin: \"0.5rem\" }}\n          type=\"checkbox\"\n          checked={Checked.indexOf(value.value) === -1 ? false : true}\n        >\n          {value.value}\n        </Checkbox>\n      </React.Fragment>\n    ));\n\n  return (\n    <div>\n      <Collapse defaultActiveKey={[\"1\"]}>\n        <Panel header=\"Sizes\" key=\"1\">\n          {renderCheckboxLists()}\n        </Panel>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}