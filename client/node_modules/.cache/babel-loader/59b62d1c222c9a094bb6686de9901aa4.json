{"ast":null,"code":"var _jsxFileName = \"/Users/iashir/Desktop/WorkProjects/Store/client/src/components/views/LoginPage/LoginPage.js\";\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Icon, Input, Button, Checkbox, Typography } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nconst {\n  Title\n} = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : \"\";\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: initialEmail,\n      password: \"\"\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let dataToSubmit = {\n          email: values.email,\n          password: values.password\n        };\n        dispatch(loginUser(dataToSubmit)).then(response => {\n          if (response.payload.loginSuccess) {\n            console.log(response.payload);\n            window.localStorage.setItem(\"userId\", response.payload.userId);\n\n            if (rememberMe === true) {\n              window.localStorage.setItem(\"rememberMe\", values.id);\n            } else {\n              localStorage.removeItem(\"rememberMe\");\n            }\n\n            props.history.push(\"/\");\n          } else {\n            setFormErrorMessage(\"Check out your Account or Password again\");\n          }\n        }).catch(err => {\n          setFormErrorMessage(\"Check out your Account or Password again\");\n          setTimeout(() => {\n            setFormErrorMessage(\"\");\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      level: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        width: \"350px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"email\",\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }),\n      placeholder: \"Enter your email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(Form.Item, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      id: \"password\",\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }),\n      placeholder: \"Enter your password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      className: errors.password && touched.password ? \"text-input error\" : \"text-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, errors.password)), formErrorMessage && /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"#ff0000bf\",\n        fontSize: \"0.7rem\",\n        border: \"1px solid\",\n        padding: \"1rem\",\n        borderRadius: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, formErrorMessage)), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      id: \"rememberMe\",\n      onChange: handleRememberMe,\n      checked: rememberMe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"Remember me\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"/reset_user\",\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"forgot password\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      style: {\n        minWidth: \"100%\"\n      },\n      disabled: isSubmitting,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, \"Log in\")), \"Or \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 20\n      }\n    }, \"register now!\"))));\n  });\n}\n\nexport default withRouter(LoginPage);","map":{"version":3,"sources":["/Users/iashir/Desktop/WorkProjects/Store/client/src/components/views/LoginPage/LoginPage.js"],"names":["React","useState","withRouter","loginUser","Formik","Yup","Form","Icon","Input","Button","Checkbox","Typography","useDispatch","Title","LoginPage","props","dispatch","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","email","password","object","shape","string","required","min","values","setSubmitting","setTimeout","dataToSubmit","then","response","payload","loginSuccess","console","log","window","setItem","userId","id","removeItem","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","width","color","fontSize","border","padding","borderRadius","float","minWidth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Icon, Input, Button, Checkbox, Typography } from \"antd\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\")\n    ? localStorage.getItem(\"rememberMe\")\n    : \"\";\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: \"\",\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email(\"Email is invalid\")\n          .required(\"Email is required\"),\n        password: Yup.string()\n          .min(6, \"Password must be at least 6 characters\")\n          .required(\"Password is required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then((response) => {\n              if (response.payload.loginSuccess) {\n                console.log(response.payload);\n                window.localStorage.setItem(\"userId\", response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem(\"rememberMe\", values.id);\n                } else {\n                  localStorage.removeItem(\"rememberMe\");\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage(\"Check out your Account or Password again\");\n              }\n            })\n            .catch((err) => {\n              setFormErrorMessage(\"Check out your Account or Password again\");\n              setTimeout(() => {\n                setFormErrorMessage(\"\");\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {(props) => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: \"350px\" }}>\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? \"text-input error\"\n                      : \"text-input\"\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: \"#ff0000bf\",\n                      fontSize: \"0.7rem\",\n                      border: \"1px solid\",\n                      padding: \"1rem\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n\n              <Form.Item>\n                <Checkbox\n                  id=\"rememberMe\"\n                  onChange={handleRememberMe}\n                  checked={rememberMe}\n                >\n                  Remember me\n                </Checkbox>\n                <a\n                  className=\"login-form-forgot\"\n                  href=\"/reset_user\"\n                  style={{ float: \"right\" }}\n                >\n                  forgot password\n                </a>\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ minWidth: \"100%\" }}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    Log in\n                  </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n"]},"metadata":{},"sourceType":"module"}